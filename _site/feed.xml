<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2018-06-18T15:34:05+09:00</updated><id>http://localhost:4000/blog/</id><title type="html">Inu IT Blog</title><subtitle>Web Developer from Somewhere</subtitle><entry><title type="html">데이터 모델링</title><link href="http://localhost:4000/blog/modeling/" rel="alternate" type="text/html" title="데이터 모델링" /><published>2018-06-18T00:00:00+09:00</published><updated>2018-06-18T00:00:00+09:00</updated><id>http://localhost:4000/blog/modeling</id><content type="html" xml:base="http://localhost:4000/blog/modeling/">&lt;h5 id=&quot;분석&quot;&gt;분석&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;분석미흡 : 현행시스템의 프로그램 복잡도 미파악, 숨어있는 업무에 대한 누락 발생&lt;/li&gt;
  &lt;li&gt;업무배경도 : 역할, 시스템간의 흐름도&lt;/li&gt;
  &lt;li&gt;업무기능분해도 : 1레벨 ~ 5레벨 단위프로세스 정의&lt;/li&gt;
  &lt;li&gt;업무흐름도 : 역할, 단위프로세스 flow chart&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;화면설계&quot;&gt;화면설계&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;공통모듈화, 코드표준화&lt;/li&gt;
  &lt;li&gt;화면정의서, 화면설계서&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;비지니스로직설계&quot;&gt;비지니스로직설계&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;프로시저 : 강사리스트접수(배치)&lt;/li&gt;
  &lt;li&gt;프로그램 : 강사조회&lt;/li&gt;
  &lt;li&gt;모듈 : 강사생성&lt;/li&gt;
  &lt;li&gt;설계목적 : 유연성, 포함성&lt;/li&gt;
  &lt;li&gt;설계원리 : 모듈, 높은 응집도, 낮은 결합도&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;모듈화&quot;&gt;모듈화&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;복잡한 계산식. 자주 사용 Vali, 항상 연관된 입력값 검증, 테이블 반영사항 기준&lt;/li&gt;
  &lt;li&gt;공통화영역 도출&lt;/li&gt;
  &lt;li&gt;하나의 모듈을 호출하는 상위모듈이 많으면 좋음(Fan-in)&lt;/li&gt;
  &lt;li&gt;결합도 낮게, 응집도 높게&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;논리-데이터-데이터모델링&quot;&gt;논리 데이터 데이터모델링&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;논리데이터모델링 : 정규화, 중복배제, 유연성&lt;/li&gt;
  &lt;li&gt;물리데이터모델링 : 반정규화, 중복허용, 파티셔닝/집계테이블&lt;/li&gt;
  &lt;li&gt;주제영역 : 고객, 주문&lt;/li&gt;
  &lt;li&gt;엔터티 : 고객주문, 고객연락처, 거래처&lt;/li&gt;
  &lt;li&gt;관계 : Membership, Cardinality, Optionality&lt;/li&gt;
  &lt;li&gt;식별자의 규칙 : 유일성, 최소성, Not Null, Never change&lt;/li&gt;
  &lt;li&gt;상관 모델링 : CRUD 매트릭스, DFD(Data Flow Diagram), 화면정의서&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;정규화&quot;&gt;정규화&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;입력,수정,삭제의 이상현상 제거&lt;/li&gt;
  &lt;li&gt;중복된 데이터가 없도록 -&amp;gt; 프로그램 단순화&lt;/li&gt;
  &lt;li&gt;데이터 모델 구조화&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;1차-정규화&quot;&gt;1차 정규화&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;복수의 속성값을 분리&lt;/li&gt;
  &lt;li&gt;주문, 주문목록&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;2차-정규화&quot;&gt;2차 정규화&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;주식별자 전체에 종속적이지 않은 속성 별도의 엔터티로 분리&lt;/li&gt;
  &lt;li&gt;주문, 주문목록, 제품&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;3차-정규화&quot;&gt;3차 정규화&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;비식별자에 종속적인 속성을 별도의 엔터티로 분리&lt;/li&gt;
  &lt;li&gt;주문, 주문목록, 제품, 고객&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;보이스-코드-정규화&quot;&gt;보이스 코드 정규화&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;식별자 간에 종속성이 있는 경우 별도의 엔터티로 분리&lt;/li&gt;
  &lt;li&gt;납품(납품업체코드, 납품회사명, 제품코드) -&amp;gt; 납품회사, 납품&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;4차-정규화&quot;&gt;4차 정규화&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;여러 값을 중복으로 삽입해야 하는 종속성 제거&lt;/li&gt;
  &lt;li&gt;지원내역(사원번호, 기술코드, 프로젝트코드) -&amp;gt; 사원, 기술, 프로젝트, 지원내역) -&amp;gt; 기술, 보유기술, 사원, 지원프로젝트, 프로젝트&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;데이터-표준화&quot;&gt;데이터 표준화&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;도메인(날짜, 번호, 금액, ID), 데이터탑입(길이)&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;테스트기법&quot;&gt;테스트기법&lt;/h5&gt;
&lt;h6 id=&quot;명세기반-테스틩input-output에-기반한-방법&quot;&gt;명세기반 테스틩(input-output에 기반한 방법)&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;균등분할&lt;/li&gt;
  &lt;li&gt;경계값분석&lt;/li&gt;
  &lt;li&gt;결정테이블(테스트조건, 기대결과, 테스트케이스작성)&lt;/li&gt;
  &lt;li&gt;유스케이스 (이벤트플로우, 시나리오)&lt;/li&gt;
  &lt;li&gt;페어와이즈&lt;/li&gt;
  &lt;li&gt;구현은 되었지만 기능명세서에 정의되지 않은 숨어있는 기능과 관련된 에러 찾지 못함&lt;/li&gt;
  &lt;li&gt;테스트 결과의 우연한 일치가 발생할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;구조기반-테스팅&quot;&gt;구조기반 테스팅&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;프로그램 내부 구조를 정의한 명세서나 소스코드를 기반으로 테스트 케이스 도출(Logic)&lt;/li&gt;
  &lt;li&gt;구문커버리지, 결정커버리지, 조건커버리지,조건결정, 다중조건&lt;/li&gt;
  &lt;li&gt;기능명세서 상에 정의 되었으나 구현되지 않은 누락된 기능은 찾지 못함&lt;/li&gt;
  &lt;li&gt;명세상에 정의된 내용과 다르게 작동하는 기능들은 발견하지 못함&lt;/li&gt;
  &lt;li&gt;적용시간과 비용 높음&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;경험기반-테스팅&quot;&gt;경험기반 테스팅&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;오류추측, 체크리스트, 탐색적 테스팅&lt;/li&gt;
  &lt;li&gt;테스트의 경험과 역량에 따라 품질차이 발생, 복잡한 로직테스트에 한계&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;물리데이터모델링&quot;&gt;물리데이터모델링&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;반정규화대상 : 범위처리빈도수조사, 대량의범위처리조사, 집계성프로세스조사, 테이블조인개수&lt;/li&gt;
  &lt;li&gt;다른방법유도검토 : 뷰(VIEW) 테이블, 클러스터링적용, 인덱스의조정, 응용어플리케이션&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;번호채번&quot;&gt;번호채번&lt;/h5&gt;
&lt;h6 id=&quot;채번테이블&quot;&gt;채번테이블&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;단점 : Update lock 밠생 가능성&lt;/li&gt;
  &lt;li&gt;장점 : 누락이 없는 순차적인 번호구성 가능함&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;시퀀스오브젝트&quot;&gt;시퀀스오브젝트&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;단점 : 순차적인 번호 생성 보장불가, 관리 어려움&lt;/li&gt;
  &lt;li&gt;장점 : 중복가능성 없음, lock 문제 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;sql문-이용max--1&quot;&gt;SQL문 이용(MAX + 1)&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;단점 : Transtion 집중될 경우 insert 시 중복에러 발생함&lt;/li&gt;
  &lt;li&gt;장점 : Lock문제 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;관계형-데이터베이스의-무결성&quot;&gt;관계형 데이터베이스의 무결성&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;엔터티무결성 : 모든 데이터는 유일해야 함 / 식별자 / PK, UK&lt;/li&gt;
  &lt;li&gt;참조무결성 : 데이터는 홀로 존재X, 누군가에게 의지해야함 / 관계,외부식별자 / PK, FK&lt;/li&gt;
  &lt;li&gt;도메인무결성 : 컬럼값은 일정한 제약 가짐 / 없음 / Data Type, Size, Null 여부, Default, Contraint&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;단어사전 : 고객, 금액, 매출, 구분&lt;/li&gt;
  &lt;li&gt;도메인사전 : 금액, 금액_15, DECIMAL(15)&lt;/li&gt;
  &lt;li&gt;표준단어사전 : 고객매출금액&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="데이터 모델링" /><summary type="html">분석 분석미흡 : 현행시스템의 프로그램 복잡도 미파악, 숨어있는 업무에 대한 누락 발생 업무배경도 : 역할, 시스템간의 흐름도 업무기능분해도 : 1레벨 ~ 5레벨 단위프로세스 정의 업무흐름도 : 역할, 단위프로세스 flow chart</summary></entry></feed>